═══════════════════════════════════════════════════════════
           URUTTE - DOCKER QUICK START GUIDE
═══════════════════════════════════════════════════════════

🚀 FASTEST WAY TO START:
───────────────────────────────────────────────────────────

  ./docker-start.sh

  (Script will guide you through the setup)

═══════════════════════════════════════════════════════════

📋 MANUAL START (3 Steps):
───────────────────────────────────────────────────────────

1. Setup credentials:
   cp env.docker.example .env
   nano .env  # Add your Google OAuth credentials

2. Build and start:
   docker-compose up --build

3. Open browser:
   http://localhost

═══════════════════════════════════════════════════════════

🎮 COMMON COMMANDS:
───────────────────────────────────────────────────────────

Start:              docker-compose up
Start (background): docker-compose up -d
Stop:               docker-compose stop
Restart:            docker-compose restart
Remove:             docker-compose down
View logs:          docker-compose logs -f
Rebuild:            docker-compose up --build

═══════════════════════════════════════════════════════════

🌐 ACCESS URLS:
───────────────────────────────────────────────────────────

Frontend:   http://localhost
Backend:    http://localhost:8080
API:        http://localhost:8080/api
WebSocket:  http://localhost:8080/ws
Database:   localhost:5432

═══════════════════════════════════════════════════════════

🔧 TROUBLESHOOTING:
───────────────────────────────────────────────────────────

Port already in use?
  lsof -ti:80 | xargs kill -9
  lsof -ti:8080 | xargs kill -9

Can't connect?
  docker-compose logs backend
  docker-compose logs frontend
  docker-compose up --build

Clean restart?
  docker-compose down
  docker-compose up --build

═══════════════════════════════════════════════════════════

📊 SERVICES:
───────────────────────────────────────────────────────────

Frontend:  urutte-frontend  (React + Nginx)    Port: 80
Backend:   urutte-backend   (Spring Boot)      Port: 8080
Database:  urutte-postgres  (PostgreSQL 15)    Port: 5432

═══════════════════════════════════════════════════════════

🔍 VIEW LOGS:
───────────────────────────────────────────────────────────

All services:    docker-compose logs -f
Frontend only:   docker-compose logs -f frontend
Backend only:    docker-compose logs -f backend
Database only:   docker-compose logs -f postgres

═══════════════════════════════════════════════════════════

📖 MORE INFO:
───────────────────────────────────────────────────────────

README_DOCKER.md    - Quick overview
DOCKER_SETUP.md     - Complete documentation

═══════════════════════════════════════════════════════════

⚙️  GOOGLE OAUTH SETUP:
───────────────────────────────────────────────────────────

1. Go to: https://console.cloud.google.com/apis/credentials
2. Create OAuth 2.0 Client ID
3. Add redirect URI:
   http://localhost:8080/login/oauth2/code/google
4. Add JavaScript origin:
   http://localhost
5. Copy Client ID and Secret to .env file

═══════════════════════════════════════════════════════════

✅ VERIFY RUNNING:
───────────────────────────────────────────────────────────

Check containers:    docker-compose ps
Check health:        curl http://localhost/health
Check backend:       curl http://localhost:8080/actuator/health
Check database:      docker exec urutte-postgres pg_isready

═══════════════════════════════════════════════════════════

🗑️  CLEANUP:
───────────────────────────────────────────────────────────

Stop containers:     docker-compose down
Remove volumes:      docker-compose down -v  (⚠️ Deletes data!)
Remove images:       docker image prune -a
Full cleanup:        docker system prune -a --volumes

═══════════════════════════════════════════════════════════

🎉 THAT'S IT! Enjoy your social platform!

═══════════════════════════════════════════════════════════

