version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: urutte-postgres
    restart: always
    environment:
      POSTGRES_DB: urutte
      POSTGRES_USER: urutte_user
      POSTGRES_PASSWORD: urutte_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - urutte-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U urutte_user -d urutte"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: urutte-backend
    restart: always
    environment:
      # Database Configuration
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/urutte
      SPRING_DATASOURCE_USERNAME: urutte_user
      SPRING_DATASOURCE_PASSWORD: urutte_pass
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      
      # OAuth2 Configuration (replace with your actual credentials)
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_REDIRECT_URI: http://localhost:8080/login/oauth2/code/google
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_SCOPE: openid,profile,email
      
      # OAuth2 Frontend Redirect
      APP_OAUTH2_REDIRECT_URI: http://localhost/login?token={token}
      APP_FRONTEND_URL: http://localhost
      
      # CORS Configuration
      APP_CORS_ALLOWED_ORIGINS: http://localhost,http://localhost:80,http://localhost:3000,http://frontend
      
      # File Upload Configuration
      SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE: 10MB
      SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE: 10MB
      FILE_UPLOAD_DIR: /app/uploads
      
      # Server Configuration
      SERVER_PORT: 8080
      SPRING_PROFILES_ACTIVE: default
      
    ports:
      - "8080:8080"
    volumes:
      - backend_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - urutte-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  frontend:
    build: 
      context: ./frontend_v2
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: http://localhost:8080/api
        REACT_APP_WS_URL: http://localhost:8080/ws
    container_name: urutte-frontend
    restart: always
    environment:
      - NODE_ENV=production
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - urutte-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  urutte-network:
    driver: bridge
