# Production Configuration for Urutte.com

# Server Configuration
server.port=8080
server.servlet.context-path=/

# Database Configuration
spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST:postgres}:${POSTGRES_PORT:5432}/${POSTGRES_DB:urutte_prod}
spring.datasource.username=${POSTGRES_USER:urutte_user}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.connection-timeout=20000

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=50MB
spring.servlet.multipart.enabled=true

# Upload Directory
app.upload.dir=${UPLOAD_DIR:/app/uploads}
app.upload.profile-dir=${UPLOAD_DIR:/app/uploads}/profiles
app.upload.image-dir=${UPLOAD_DIR:/app/uploads}/images
app.upload.video-dir=${UPLOAD_DIR:/app/uploads}/videos

# CORS Configuration
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://urutte.com,https://www.urutte.com}
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true

# Logging Configuration
logging.level.com.urutte=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Security Configuration
spring.security.oauth2.client.registration.google.client-id=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID:}
spring.security.oauth2.client.registration.google.client-secret=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET:}
spring.security.oauth2.client.provider.google.authorization-uri=${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_AUTHORIZATION_URI:https://accounts.google.com/oauth/authorize}
spring.security.oauth2.client.provider.google.token-uri=${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_TOKEN_URI:https://oauth2.googleapis.com/token}
spring.security.oauth2.client.provider.google.user-info-uri=${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_USER_INFO_URI:https://www.googleapis.com/oauth2/v2/userinfo}
spring.security.oauth2.client.registration.google.redirect-uri=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_REDIRECT_URI:https://urutte.com/oauth2/authorization/google}

# Application Configuration
app.frontend.url=${APP_FRONTEND_URL:https://urutte.com}
app.oauth2.redirect-uri=${APP_OAUTH2_REDIRECT_URI:https://urutte.com/login?token={token}}

# Management/Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.health.db.enabled=true

# Application Info
info.app.name=Urutte.com
info.app.description=Thread-like Social Media Application
info.app.version=1.0.0

# Performance Configuration
server.tomcat.max-threads=200
server.tomcat.min-spare-threads=10
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# Error Handling
server.error.include-stacktrace=never
server.error.include-message=never
