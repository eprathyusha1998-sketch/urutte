spring.application.name=urutte

# PostgreSQL settings
spring.datasource.url=jdbc:postgresql://postgres:5432/urutte
spring.datasource.username=urutte_user
spring.datasource.password=urutte_pass
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Server port
server.port=8080

# Google OAuth2 - Use environment variables
spring.security.oauth2.client.registration.google.client-id=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID:}
spring.security.oauth2.client.registration.google.client-secret=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET:}
spring.security.oauth2.client.registration.google.scope=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_SCOPE:openid,profile,email}
spring.security.oauth2.client.registration.google.redirect-uri=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_REDIRECT_URI:{baseUrl}/oauth2/authorization/google}

# File upload configuration
spring.servlet.multipart.max-file-size=3MB
spring.servlet.multipart.max-request-size=3MB
spring.servlet.multipart.enabled=true

# File storage configuration
app.upload.dir=./uploads
app.upload.video-dir=./uploads/videos

# Frontend URL for OAuth redirect
app.frontend.url=${APP_FRONTEND_URL:http://localhost}
app.oauth2.redirect-uri=${APP_OAUTH2_REDIRECT_URI:http://localhost/login?token={token}}
app.cors.allowed-origins=${APP_CORS_ALLOWED_ORIGINS:http://localhost}
